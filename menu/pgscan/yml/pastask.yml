#########################################################################
# Title:         Cloudbox: Plex Autoscan Role                           #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Services | Check if 'plex_autoscan.service' exists
  stat:
    path: "/etc/systemd/system/plex_autoscan.service"
  register: plex_pas_config

- name: Services | Stop 'plex_autoscan.service'
  systemd:
    name: plex_autoscan
    state: stopped
  when: plex_pas_config.stat.exists

- name: Remove old files
  file:
    path: "{{ item }}"
    state: absent   
  with_items:
    - /opt/plexautoscan
    - /opt/appdata/plexautoscan
    - /etc/systemd/system/plex_autoscan.service

- name: Set plex.user fact | token
  shell: 'cat /var/plexguide/pgscan/plex.token'
  register: plex_auth_token

- name: Set plex.user fact | token
  shell: 'cat /var/plexguide/pgscan/plex.token'
  register: plex_auth_token_display

- name: Register ServerPass
  shell: 'cat /var/plexguide/pgscan/pgscan.serverpass'
  register: plex_autoscan_server_pass

- name: Register Fixmatch Lang
  shell: 'cat /var/plexguide/pgscan/fixmatch.lang'
  register: fixmatchlang
  
- name: Register Fixmatch status
  shell: 'cat /var/plexguide/pgscan/fixmatch.status'
  register: fixmatchstatus

- name: Register Plex Docker Image status
  shell: 'cat /var/plexguide/pgscan/plex.docker'
  register: plex_docker_user

- name: Register Plex lib folder
  shell: 'cat /var/plexguide/pgscan/plex.path'
  register: plex_lib_folder

- name: Register GDrive Client_ID
  shell: 'cat /var/plexguide/pgscan/gdrive.id'
  register: gdriveid

- name: Register serverpath
  shell: 'cat /var/plexguide/server.hd.path'
  register: path
  
- name: Register GDrive Client_Secret
  shell: 'cat /var/plexguide/pgscan/gdrive.secret'
  register: gdrivesecret

- name: Create mounted.bin for trash
  file: 
    path: /mnt/unionfs/mounted.bin
    state: touch
    mode: '0755'

- name: Set User Permission  for Plex Folder
  file: "path={{ item }} state=directory mode=0775 owner=1000 group=1000 recurse=no"
  with_items:
    - '/opt/appdata/plex/database/Library/'

- name: Display Plex Auth Token
  debug:
    msg: "Plex Auth Token: {{plex_auth_token_display.stdout}}"

- name: Token Recall
  shell: 'cat /var/plexguide/pgscan/plex.token'
  register: plex_auth_token

- name: Register Plex Docker Image status
  shell: 'cat /var/plexguide/pgscan/plex.docker'
  register: plex_docker_user
 
- name: Settings | Install required packages
  apt:
    state: present
    name:
      - jq
      - moreutils

- name: Create plex_autoscan directories
  file: "path={{ item }} state=directory mode=0775 owner=1000 group=1000 recurse=yes"
  with_items:
    - '/opt/appdata/plexautoscan/'
    - '/opt/appdata/plexautoscan/config'
    - '/opt/appdata/plexautoscan/config/rclone'

- name: copy rclone.conf 
  copy:
    src: /opt/appdata/plexguide/rclone.conf
    dest: /opt/appdata/plexautoscan/config/rclone/rclone.conf
    owner: 1000
    group: 1000
    mode: '0755'

- name: Settings | Check if 'config.json' exists
  stat:
    path: "/opt/appdata/plexautoscan/config.json"
  register: plex_autoscan_config

- name: Settings | New 'config.json' tasks
  block:

  - name: Settings | Import default 'config.json'
    template:
      src: /opt/plexguide/menu/pgscan/templates/config.json.j2
      dest: /opt/appdata/plexautoscan/config/config.json
      owner: '1000'
      group: '1000'
      mode: 0775
      force: yes

  - name: Token Recall
    shell: 'cat /var/plexguide/pgscan/plex.token'
    register: plex_auth_token

  - name: Register ServerPass
    shell: 'cat /var/plexguide/pgscan/pgscan.serverpass'
    register: plex_autoscan_server_pass

  - name: Register Fixmatch Lang
    shell: 'cat /var/plexguide/pgscan/fixmatch.lang'
    register: fixmatchlang
  
  - name: Register Fixmatch status
    shell: 'cat /var/plexguide/pgscan/fixmatch.status'
    register: fixmatchstatus

  - name: Register Plex Docker Image status
    shell: 'cat /var/plexguide/pgscan/plex.docker'
    register: plex_docker_user

  - name: Register Plex lib folder
    shell: 'cat /var/plexguide/pgscan/plex.path'
    register: plex_lib_folder

  - name: Register GDrive Client_ID
    shell: 'cat /var/plexguide/pgscan/gdrive.id'
    register: gdriveid

  - name: Register GDrive Client_Secret
    shell: 'cat /var/plexguide/pgscan/gdrive.secret'
    register: gdrivesecret

  when: not plex_autoscan_config.stat.exists
